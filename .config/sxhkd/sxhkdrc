# #--- Basic bindings ---# #
# Spawn terminal defined in .profile
super + Return
	$TERMINAL
super + {0-9,grave}
	bspc desktop -f {0-9,last}
super + {bracketleft,bracketright}
	bspc desktop -f {prev,next}
# Exec dmenu with selected programs
super + p
	dmenu_run2
# Exec dmenu with all available commands
super + shift + p
	dmenu_run
# Dmenu Korean input for some apps where ibus doesn't work (e.g. Signal)
super + t
	dmenu_lang kr
super + shift + t
	dmenu_lang
super + e
	dmenuunicode
super + w
	$BROWSER
super + BackSpace
	chbg
super + b
	polybar-msg cmd toggle; bspc config bottom_padding 0

# Quit bspwm
super + shift + e
	[ "$(printf 'no\nYes' | dmenu -i -p 'Quit Bspwm? [Y\n]')" = "Yes" ] && \
		bspc quit
# Restart bspwm
super + shift + r
	bspc wm -r

# #--- Nodes ---# #
# super + {_,shift + }{h,j,k,l}
# 	bspc node focused.tiled -{f,s} {west,south,north,east}
# super + shift + {h,j,k,l}
# 	bspc node focused.tiled -s {west,south,north,east} || \
# 	bspc node focused.floating -v {-50 0,0 50,0 -50,50 0}
# Focusing
super + {h,j,k,l}
	bspc node focused.tiled -f {west,south,north,east}
# Moving node for tiled and floating state
super + shift + h
	bspc node focused.tiled -s west; \
	bspc node focused.floating -v -50 0
super + shift + j
	bspc node focused.tiled -s south; \
	bspc node focused.floating -v 0 50
super + shift + k
	bspc node focused.tiled -s north; \
	bspc node focused.floating -v 0 -50
super + shift + l
	bspc node focused.tiled -s east; \
	bspc node focused.floating -v 50 0
# Fine control for moving node
super + shift {Left,Down,Up,Right}
	bspc node focused.tiled -n {west,south,north,east}
# swap the current node and the biggest local node
super + space
	bspc node -s biggest.local || bspc node -s next.local
# Resize window
super + shift + y
	bspc node focused.tiled -z left -30 0; \
	bspc node focused.tiled -z right -30 0; \
	bspc node focused.floating -z right -30 0
super + shift + o
	bspc node focused.tiled -z left 30 0; \
	bspc node focused.tiled -z right 30 0; \
	bspc node focused.floating -z right 30 0
super + shift + u
	bspc node focused.tiled -z top 0 30; \
	bspc node focused.tiled -z bottom 0 30; \
	bspc node focused.floating -z top 0 30
super + shift + i
	bspc node focused.tiled -z top 0 -30; \
	bspc node focused.tiled -z bottom 0 -30; \
	bspc node focused.floating -z top 0 -30
# Send a node to a desktop
super + shift + {0-9}
	bspc node -d {0-9}
# Close or kill a node
super + {_,shift +}q
	bspc node focused -{c,k}
# Toggle floating
super + shift + space
	bspc node focused.tiled -t floating || bspc node focused.floating -t tiled
# Toggle sticky
super + y
	bspc node focused.floating -g sticky
# Toggle fullscreen
super + f
	bspc node focused -t ~fullscreen
	# bspc node focused.!fullscreen -t fullscreen || \
	# bspc node focused.fullscreen -t ~fullscreen

# #--- Dropdown ---# #
super + r
	$HOME/.config/bspwm/ddspawn dropdown_lf lf 112x27
super + u
	$HOME/.config/bspwm/ddspawn dropdown_term
super + n
	cd $HOME/Notes; $HOME/.config/bspwm/ddspawn dropdown_note vim $HOME/Notes/note
super + s
	check_running slack; for id in $(xdo id -N Slack); do echo $id && bspc node $id -g hidden -f; done
super + m
	check_running spotify; for id in $(xdo id -N Spotify); do echo $id && bspc node $id -g hidden -f; done
super + g
	check_running signal-desktop; for id in $(xdo id -N Signal); do echo $id && bspc node $id -g hidden -f; done


# #--- Fn keys ---# #
XF86AudioMute
	audio_toggle
XF86AudioLowerVolume
	volume_down
XF86AudioRaiseVolume
	volume_up
XF86AudioPrev
	playerctl -p spotify previous
XF86AudioPlay
	playerctl -p spotify play-pause
XF86AudioNext
	playerctl -p spotify next
XF86MonBrightnessDown
	brightness_down
XF86MonBrightnessUp
	brightness_up

super + F8
	$HOME/.local/bin/sel_monitor

# #--- Screen capture and snipping ---# #
super + Print
	gm-capture
super + shift + Print
	gm-snipping


# #--- dunstctl ---# #
ctrl + grave
	dunstctl close
ctrl + Caps_Lock
	dunstctl history-pop
alt + grave
	dunstctl context
