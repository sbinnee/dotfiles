#/bin/sh

# If no argument is provided, select one among kr | fr | en
sel=$1
sel=${sel:-"$(echo -e "kr\nfr\nen" | dmenu)"}
#echo $sel

case "$sel" in
	kr)
		engine="hangul" ;;
	fr)
		engine="xkb:fr::fra" ;;
	en)
		engine="xkb:us::eng" ;;
	*)
		exit 1 ;;
esac
#echo $engine

prev="$(ibus engine)"

# Starting from ver5.0, dmenu stopped supporting IME input, thus here dmenu4
text="$(ibus engine "$engine" && \
	$HOME/.local/bin/dmenu4 -c -fn "NanumGothic-20" -nb "#d79921" -nf "#fff" -p "[${sel^^}]" <&- | tr -d '\n')"
# NO NEED TO Backup? Usually Control + c copies both to CLIP and PRIM
# Backup XA_CLIPBOARD content to PRIMARY just for the case
# Access XA_PRIMARY by clicking middle button on mouse
if [ -n "$text" ];
then
	# xclip -sel clip -o | xclip
	echo -n "$text" | xclip -sel clip
	focused=$(bspc query -N focused -n)
	# Signal specific key simulation
	if [ "$focused" = "$(xdo id -N Signal)" ]; then
		# Simulate Control + Shift + t, which put cursor on text composer
		xdo key_press -k 37; xdo key_press -k 50; xdo key_press -k 28;
		xdo key_release -k 28; xdo key_release -k 50; xdo key_release -k 37;
	fi
	# Simulate Control_L + v
	xdo key_press -k 37; xdo key_press -k 55; xdo key_release -k 55; xdo key_release -k 37
fi
## Using `xdo` requires mouse pointer on text area
# echo -n "$text" | xclip -sel prim
# xdo button_press -k 2; xdo button_release -k 2
ibus engine "$prev"

