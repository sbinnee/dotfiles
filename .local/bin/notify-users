#!/bin/sh
# This script allows root user to notify messages to all the opened window
# manager processes. Change $WM to your window manager.
#
# INSTALLATION
# Make a link of this script inside /usr/local/bin/ directory, so that root can
# find this script as an executable in PATH.
#
# USAGE
# Note that opts come after two positional arguments. This means if a user wants
# to pass optional argument(s), one needs to pass body even if it is empty.
#
# EXAMPLE
# notify-users "Title" "Body" -u low
# notify-users "Title" "" -u low
# notify-users "" "Body" -u low
# notify-users "Title" -u low  # WRONG '-u' becomes body and 'low' becomes opts
WM="bspwm"

title="$1"
body="$2"
shift 2
opts="$*"

for pid in $(pgrep "$WM"); do
    eval $(grep -z ^USER /proc/$pid/environ)
    eval export $(grep -z ^DISPLAY /proc/$pid/environ)
    eval export $(grep -z ^DBUS_SESSION_BUS_ADDRESS /proc/$pid/environ)
    if [ $(id -u) -eq 0 ]
    then
        su $USER -c "notify-send $opts \"$title\" \"$body\""
    else
        notify-send $opts "$title" "$body"
    fi
done

# # Usage: notify "title" "description" [options to pass to send-notify"
# title="$1"
# body="$2"
# shift 2
# opts="$*"

# # Send messages to users listed by the 'users' command, but only once
# # Maybe sh has a better way of doing set operations, but this works:
# SENT=""
# for USER in $(users); do
#     case $SENT in
#         "$USER") ;;
#         *" $USER") ;;
#         "$USER "*) ;;
#         *" $USER "*) ;;
#         # use 'su USER' to send the message
#         *) SENT="$SENT $USER"; su $USER -c "notify-send $opts \"$title\" \"$body\"" ;;
#     esac
# done
