#!/usr/bin/python

import time
import argparse
import subprocess
from tqdm import tqdm

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="timer")
    parser.add_argument(
        'duration',
        type=str,
        nargs='+',
        metavar='NUMBER[SUFFIX]',
        help="Valid suffixes are ['h', 'm', 's'], for hour(s), minute(s), "
             "and second(s), respectively. Provide multiple suffixes sparated "
             "by a black space. If omitted, it assumes 's'."
    )
    args = parser.parse_args()

    duration = 0
    for t in args.duration:
        if t.endswith('h'):
            h = int(t.rstrip('h'))
            duration += h * 3600
        elif t.endswith('m'):
            m = int(t.rstrip('m'))
            duration += m * 60
        elif t.endswith('s'):
            s = int(t.rstrip('s'))
            duration += s
        else:
            try:
                s = int(t)
                duration += s
            except:
                raise KeyError("Wrong format")

    # Specify a custom bar string formatting. May impact performance. [default:
    # '{l_bar}{bar}{r_bar}'], where l_bar='{desc}: {percentage:3.0f}%|' and
    # r_bar='| {n_fmt}/{total_fmt} [{elapsed}<{remaining}, '
    # '{rate_fmt}{postfix}]' Possible vars: l_bar, bar, r_bar, n, n_fmt, total,
    # total_fmt, percentage, elapsed, elapsed_s, ncols, nrows, desc, unit, rate,
    # rate_fmt, rate_noinv, rate_noinv_fmt, rate_inv, rate_inv_fmt, postfix,
    # unit_divisor, remaining, remaining_s, eta. Note that a trailing ": " is
    # automatically removed after {desc} if the latter is empty.
    bar_format = '{l_bar}{bar}| [{elapsed}<{remaining}]'
    with tqdm(
            range(duration),
            ncols=52,
            bar_format=bar_format,
            colour='green',
        ) as pbar:
        for _ in pbar:
            time.sleep(1)
    subprocess.run(["playsound", "bell"])
